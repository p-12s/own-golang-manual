// Code generated by protoc-gen-go. DO NOT EDIT.
// source: homeworkpb/homework.proto

package homeworkpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CheckHomeworkRequest struct {
	Hw                   int32    `protobuf:"varint,1,opt,name=hw,proto3" json:"hw,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckHomeworkRequest) Reset()         { *m = CheckHomeworkRequest{} }
func (m *CheckHomeworkRequest) String() string { return proto.CompactTextString(m) }
func (*CheckHomeworkRequest) ProtoMessage()    {}
func (*CheckHomeworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba454d8dc83bd2ae, []int{0}
}

func (m *CheckHomeworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckHomeworkRequest.Unmarshal(m, b)
}
func (m *CheckHomeworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckHomeworkRequest.Marshal(b, m, deterministic)
}
func (m *CheckHomeworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckHomeworkRequest.Merge(m, src)
}
func (m *CheckHomeworkRequest) XXX_Size() int {
	return xxx_messageInfo_CheckHomeworkRequest.Size(m)
}
func (m *CheckHomeworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckHomeworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckHomeworkRequest proto.InternalMessageInfo

func (m *CheckHomeworkRequest) GetHw() int32 {
	if m != nil {
		return m.Hw
	}
	return 0
}

func (m *CheckHomeworkRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type CheckHomeworkResponse struct {
	Hw                   int32    `protobuf:"varint,1,opt,name=hw,proto3" json:"hw,omitempty"`
	Grade                int32    `protobuf:"varint,2,opt,name=grade,proto3" json:"grade,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckHomeworkResponse) Reset()         { *m = CheckHomeworkResponse{} }
func (m *CheckHomeworkResponse) String() string { return proto.CompactTextString(m) }
func (*CheckHomeworkResponse) ProtoMessage()    {}
func (*CheckHomeworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba454d8dc83bd2ae, []int{1}
}

func (m *CheckHomeworkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckHomeworkResponse.Unmarshal(m, b)
}
func (m *CheckHomeworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckHomeworkResponse.Marshal(b, m, deterministic)
}
func (m *CheckHomeworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckHomeworkResponse.Merge(m, src)
}
func (m *CheckHomeworkResponse) XXX_Size() int {
	return xxx_messageInfo_CheckHomeworkResponse.Size(m)
}
func (m *CheckHomeworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckHomeworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckHomeworkResponse proto.InternalMessageInfo

func (m *CheckHomeworkResponse) GetHw() int32 {
	if m != nil {
		return m.Hw
	}
	return 0
}

func (m *CheckHomeworkResponse) GetGrade() int32 {
	if m != nil {
		return m.Grade
	}
	return 0
}

type CheckAllHomeworksRequest struct {
	Hw                   []int32  `protobuf:"varint,1,rep,packed,name=hw,proto3" json:"hw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckAllHomeworksRequest) Reset()         { *m = CheckAllHomeworksRequest{} }
func (m *CheckAllHomeworksRequest) String() string { return proto.CompactTextString(m) }
func (*CheckAllHomeworksRequest) ProtoMessage()    {}
func (*CheckAllHomeworksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba454d8dc83bd2ae, []int{2}
}

func (m *CheckAllHomeworksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckAllHomeworksRequest.Unmarshal(m, b)
}
func (m *CheckAllHomeworksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckAllHomeworksRequest.Marshal(b, m, deterministic)
}
func (m *CheckAllHomeworksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckAllHomeworksRequest.Merge(m, src)
}
func (m *CheckAllHomeworksRequest) XXX_Size() int {
	return xxx_messageInfo_CheckAllHomeworksRequest.Size(m)
}
func (m *CheckAllHomeworksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckAllHomeworksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckAllHomeworksRequest proto.InternalMessageInfo

func (m *CheckAllHomeworksRequest) GetHw() []int32 {
	if m != nil {
		return m.Hw
	}
	return nil
}

type SubmitAllHomeworksRequest struct {
	Hw                   int32    `protobuf:"varint,1,opt,name=hw,proto3" json:"hw,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitAllHomeworksRequest) Reset()         { *m = SubmitAllHomeworksRequest{} }
func (m *SubmitAllHomeworksRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitAllHomeworksRequest) ProtoMessage()    {}
func (*SubmitAllHomeworksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba454d8dc83bd2ae, []int{3}
}

func (m *SubmitAllHomeworksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitAllHomeworksRequest.Unmarshal(m, b)
}
func (m *SubmitAllHomeworksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitAllHomeworksRequest.Marshal(b, m, deterministic)
}
func (m *SubmitAllHomeworksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitAllHomeworksRequest.Merge(m, src)
}
func (m *SubmitAllHomeworksRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitAllHomeworksRequest.Size(m)
}
func (m *SubmitAllHomeworksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitAllHomeworksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitAllHomeworksRequest proto.InternalMessageInfo

func (m *SubmitAllHomeworksRequest) GetHw() int32 {
	if m != nil {
		return m.Hw
	}
	return 0
}

func (m *SubmitAllHomeworksRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type SubmitAllHomeworksResponse struct {
	Accepted             bool     `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitAllHomeworksResponse) Reset()         { *m = SubmitAllHomeworksResponse{} }
func (m *SubmitAllHomeworksResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitAllHomeworksResponse) ProtoMessage()    {}
func (*SubmitAllHomeworksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba454d8dc83bd2ae, []int{4}
}

func (m *SubmitAllHomeworksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitAllHomeworksResponse.Unmarshal(m, b)
}
func (m *SubmitAllHomeworksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitAllHomeworksResponse.Marshal(b, m, deterministic)
}
func (m *SubmitAllHomeworksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitAllHomeworksResponse.Merge(m, src)
}
func (m *SubmitAllHomeworksResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitAllHomeworksResponse.Size(m)
}
func (m *SubmitAllHomeworksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitAllHomeworksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitAllHomeworksResponse proto.InternalMessageInfo

func (m *SubmitAllHomeworksResponse) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

func init() {
	proto.RegisterType((*CheckHomeworkRequest)(nil), "homework.CheckHomeworkRequest")
	proto.RegisterType((*CheckHomeworkResponse)(nil), "homework.CheckHomeworkResponse")
	proto.RegisterType((*CheckAllHomeworksRequest)(nil), "homework.CheckAllHomeworksRequest")
	proto.RegisterType((*SubmitAllHomeworksRequest)(nil), "homework.SubmitAllHomeworksRequest")
	proto.RegisterType((*SubmitAllHomeworksResponse)(nil), "homework.SubmitAllHomeworksResponse")
}

func init() { proto.RegisterFile("homeworkpb/homework.proto", fileDescriptor_ba454d8dc83bd2ae) }

var fileDescriptor_ba454d8dc83bd2ae = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0x4f, 0x4f, 0x83, 0x40,
	0x10, 0xc5, 0x5d, 0x2a, 0x06, 0x27, 0xfe, 0x9d, 0xd4, 0x84, 0x72, 0xd0, 0x66, 0xf5, 0x40, 0x3c,
	0xd4, 0x46, 0x2f, 0xc6, 0xc4, 0x18, 0x35, 0x31, 0x1e, 0xcd, 0x7a, 0xd2, 0x78, 0x81, 0x65, 0x22,
	0x4d, 0xc1, 0x45, 0xa0, 0xe1, 0xec, 0x37, 0x37, 0x52, 0xb6, 0x8d, 0x40, 0xf1, 0xe0, 0x6d, 0x07,
	0xe6, 0xf7, 0xe6, 0xcd, 0xcb, 0xc0, 0x20, 0x54, 0x31, 0x15, 0x2a, 0x9d, 0x26, 0xfe, 0x99, 0x7e,
	0x8e, 0x92, 0x54, 0xe5, 0x0a, 0x2d, 0x5d, 0xf3, 0x2b, 0xe8, 0xdf, 0x87, 0x24, 0xa7, 0x8f, 0xd5,
	0x07, 0x41, 0x9f, 0x33, 0xca, 0x72, 0xdc, 0x01, 0x23, 0x2c, 0x6c, 0x36, 0x64, 0xae, 0x29, 0x8c,
	0xb0, 0x40, 0x84, 0x75, 0xa9, 0x02, 0xb2, 0x8d, 0x21, 0x73, 0x37, 0x45, 0xf9, 0xe6, 0xd7, 0x70,
	0x50, 0x63, 0xb3, 0x44, 0x7d, 0x64, 0xd4, 0x80, 0xfb, 0x60, 0xbe, 0xa7, 0x5e, 0x45, 0x9b, 0x62,
	0x5e, 0xf0, 0x53, 0xb0, 0x4b, 0xfc, 0x36, 0x8a, 0xb4, 0x42, 0x56, 0x1f, 0xdf, 0x9b, 0x2b, 0xf0,
	0x1b, 0x18, 0x3c, 0xcf, 0xfc, 0x78, 0x92, 0x77, 0x35, 0x77, 0x79, 0xbd, 0x04, 0xa7, 0x4d, 0xa0,
	0x32, 0xec, 0x80, 0xe5, 0x49, 0x49, 0x49, 0x4e, 0x41, 0xa9, 0x63, 0x89, 0x45, 0x7d, 0xfe, 0xd5,
	0x83, 0x5d, 0x4d, 0x94, 0x7e, 0x29, 0xc5, 0x27, 0xd8, 0xfe, 0xb5, 0x39, 0x1e, 0x8e, 0x16, 0x09,
	0xb7, 0xc5, 0xe9, 0x1c, 0xad, 0xfc, 0x5f, 0x39, 0x78, 0x83, 0xfd, 0x46, 0x18, 0xc8, 0x6b, 0x54,
	0xcb, 0xf2, 0x7f, 0x2a, 0xf3, 0xb5, 0x31, 0x43, 0x09, 0xd8, 0xdc, 0x1e, 0x8f, 0x97, 0xe8, 0xca,
	0x70, 0x9d, 0x93, 0xee, 0x26, 0x3d, 0xc4, 0x65, 0xf8, 0x02, 0x7b, 0x82, 0xbc, 0x28, 0x9f, 0xc4,
	0xf4, 0x40, 0x14, 0xf8, 0x9e, 0xfc, 0x7f, 0x2e, 0x3f, 0xc2, 0x63, 0x76, 0xb7, 0xf5, 0x0a, 0xcb,
	0x63, 0xf6, 0x37, 0xca, 0x23, 0xbe, 0xf8, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x03, 0xf4, 0x90, 0xe9,
	0xe1, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HomeworkCheckerClient is the client API for HomeworkChecker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HomeworkCheckerClient interface {
	CheckHomework(ctx context.Context, in *CheckHomeworkRequest, opts ...grpc.CallOption) (*CheckHomeworkResponse, error)
	CheckAllHomeworks(ctx context.Context, in *CheckAllHomeworksRequest, opts ...grpc.CallOption) (HomeworkChecker_CheckAllHomeworksClient, error)
	SubmitAllHomeworks(ctx context.Context, opts ...grpc.CallOption) (HomeworkChecker_SubmitAllHomeworksClient, error)
	RealtimeFeedback(ctx context.Context, opts ...grpc.CallOption) (HomeworkChecker_RealtimeFeedbackClient, error)
}

type homeworkCheckerClient struct {
	cc *grpc.ClientConn
}

func NewHomeworkCheckerClient(cc *grpc.ClientConn) HomeworkCheckerClient {
	return &homeworkCheckerClient{cc}
}

func (c *homeworkCheckerClient) CheckHomework(ctx context.Context, in *CheckHomeworkRequest, opts ...grpc.CallOption) (*CheckHomeworkResponse, error) {
	out := new(CheckHomeworkResponse)
	err := c.cc.Invoke(ctx, "/homework.HomeworkChecker/CheckHomework", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *homeworkCheckerClient) CheckAllHomeworks(ctx context.Context, in *CheckAllHomeworksRequest, opts ...grpc.CallOption) (HomeworkChecker_CheckAllHomeworksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HomeworkChecker_serviceDesc.Streams[0], "/homework.HomeworkChecker/CheckAllHomeworks", opts...)
	if err != nil {
		return nil, err
	}
	x := &homeworkCheckerCheckAllHomeworksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HomeworkChecker_CheckAllHomeworksClient interface {
	Recv() (*CheckHomeworkResponse, error)
	grpc.ClientStream
}

type homeworkCheckerCheckAllHomeworksClient struct {
	grpc.ClientStream
}

func (x *homeworkCheckerCheckAllHomeworksClient) Recv() (*CheckHomeworkResponse, error) {
	m := new(CheckHomeworkResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *homeworkCheckerClient) SubmitAllHomeworks(ctx context.Context, opts ...grpc.CallOption) (HomeworkChecker_SubmitAllHomeworksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HomeworkChecker_serviceDesc.Streams[1], "/homework.HomeworkChecker/SubmitAllHomeworks", opts...)
	if err != nil {
		return nil, err
	}
	x := &homeworkCheckerSubmitAllHomeworksClient{stream}
	return x, nil
}

type HomeworkChecker_SubmitAllHomeworksClient interface {
	Send(*SubmitAllHomeworksRequest) error
	CloseAndRecv() (*SubmitAllHomeworksResponse, error)
	grpc.ClientStream
}

type homeworkCheckerSubmitAllHomeworksClient struct {
	grpc.ClientStream
}

func (x *homeworkCheckerSubmitAllHomeworksClient) Send(m *SubmitAllHomeworksRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *homeworkCheckerSubmitAllHomeworksClient) CloseAndRecv() (*SubmitAllHomeworksResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SubmitAllHomeworksResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *homeworkCheckerClient) RealtimeFeedback(ctx context.Context, opts ...grpc.CallOption) (HomeworkChecker_RealtimeFeedbackClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HomeworkChecker_serviceDesc.Streams[2], "/homework.HomeworkChecker/RealtimeFeedback", opts...)
	if err != nil {
		return nil, err
	}
	x := &homeworkCheckerRealtimeFeedbackClient{stream}
	return x, nil
}

type HomeworkChecker_RealtimeFeedbackClient interface {
	Send(*CheckHomeworkRequest) error
	Recv() (*CheckHomeworkResponse, error)
	grpc.ClientStream
}

type homeworkCheckerRealtimeFeedbackClient struct {
	grpc.ClientStream
}

func (x *homeworkCheckerRealtimeFeedbackClient) Send(m *CheckHomeworkRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *homeworkCheckerRealtimeFeedbackClient) Recv() (*CheckHomeworkResponse, error) {
	m := new(CheckHomeworkResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// HomeworkCheckerServer is the server API for HomeworkChecker service.
type HomeworkCheckerServer interface {
	CheckHomework(context.Context, *CheckHomeworkRequest) (*CheckHomeworkResponse, error)
	CheckAllHomeworks(*CheckAllHomeworksRequest, HomeworkChecker_CheckAllHomeworksServer) error
	SubmitAllHomeworks(HomeworkChecker_SubmitAllHomeworksServer) error
	RealtimeFeedback(HomeworkChecker_RealtimeFeedbackServer) error
}

// UnimplementedHomeworkCheckerServer can be embedded to have forward compatible implementations.
type UnimplementedHomeworkCheckerServer struct {
}

func (*UnimplementedHomeworkCheckerServer) CheckHomework(ctx context.Context, req *CheckHomeworkRequest) (*CheckHomeworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckHomework not implemented")
}
func (*UnimplementedHomeworkCheckerServer) CheckAllHomeworks(req *CheckAllHomeworksRequest, srv HomeworkChecker_CheckAllHomeworksServer) error {
	return status.Errorf(codes.Unimplemented, "method CheckAllHomeworks not implemented")
}
func (*UnimplementedHomeworkCheckerServer) SubmitAllHomeworks(srv HomeworkChecker_SubmitAllHomeworksServer) error {
	return status.Errorf(codes.Unimplemented, "method SubmitAllHomeworks not implemented")
}
func (*UnimplementedHomeworkCheckerServer) RealtimeFeedback(srv HomeworkChecker_RealtimeFeedbackServer) error {
	return status.Errorf(codes.Unimplemented, "method RealtimeFeedback not implemented")
}

func RegisterHomeworkCheckerServer(s *grpc.Server, srv HomeworkCheckerServer) {
	s.RegisterService(&_HomeworkChecker_serviceDesc, srv)
}

func _HomeworkChecker_CheckHomework_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckHomeworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HomeworkCheckerServer).CheckHomework(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/homework.HomeworkChecker/CheckHomework",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HomeworkCheckerServer).CheckHomework(ctx, req.(*CheckHomeworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HomeworkChecker_CheckAllHomeworks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CheckAllHomeworksRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HomeworkCheckerServer).CheckAllHomeworks(m, &homeworkCheckerCheckAllHomeworksServer{stream})
}

type HomeworkChecker_CheckAllHomeworksServer interface {
	Send(*CheckHomeworkResponse) error
	grpc.ServerStream
}

type homeworkCheckerCheckAllHomeworksServer struct {
	grpc.ServerStream
}

func (x *homeworkCheckerCheckAllHomeworksServer) Send(m *CheckHomeworkResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HomeworkChecker_SubmitAllHomeworks_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HomeworkCheckerServer).SubmitAllHomeworks(&homeworkCheckerSubmitAllHomeworksServer{stream})
}

type HomeworkChecker_SubmitAllHomeworksServer interface {
	SendAndClose(*SubmitAllHomeworksResponse) error
	Recv() (*SubmitAllHomeworksRequest, error)
	grpc.ServerStream
}

type homeworkCheckerSubmitAllHomeworksServer struct {
	grpc.ServerStream
}

func (x *homeworkCheckerSubmitAllHomeworksServer) SendAndClose(m *SubmitAllHomeworksResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *homeworkCheckerSubmitAllHomeworksServer) Recv() (*SubmitAllHomeworksRequest, error) {
	m := new(SubmitAllHomeworksRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _HomeworkChecker_RealtimeFeedback_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HomeworkCheckerServer).RealtimeFeedback(&homeworkCheckerRealtimeFeedbackServer{stream})
}

type HomeworkChecker_RealtimeFeedbackServer interface {
	Send(*CheckHomeworkResponse) error
	Recv() (*CheckHomeworkRequest, error)
	grpc.ServerStream
}

type homeworkCheckerRealtimeFeedbackServer struct {
	grpc.ServerStream
}

func (x *homeworkCheckerRealtimeFeedbackServer) Send(m *CheckHomeworkResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *homeworkCheckerRealtimeFeedbackServer) Recv() (*CheckHomeworkRequest, error) {
	m := new(CheckHomeworkRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _HomeworkChecker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "homework.HomeworkChecker",
	HandlerType: (*HomeworkCheckerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckHomework",
			Handler:    _HomeworkChecker_CheckHomework_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CheckAllHomeworks",
			Handler:       _HomeworkChecker_CheckAllHomeworks_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubmitAllHomeworks",
			Handler:       _HomeworkChecker_SubmitAllHomeworks_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "RealtimeFeedback",
			Handler:       _HomeworkChecker_RealtimeFeedback_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "homeworkpb/homework.proto",
}
