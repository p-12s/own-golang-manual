package tcp_scanner

import (
	"fmt"
	"net"
	"strconv"
	"sync"
	"time"
)

func GetOpenPorts1(host string, maxPortNumber int) ([]int, error) { // TODO сейчас ошибку не выбрасываем. но  где она может быть?

	dialer := net.Dialer{
		Timeout: 10 * time.Second,
	}

	openPorts := make([]int, 0) // TODO не бокируется ли тут слайс? может переделать на что-то?

	var wg sync.WaitGroup // TODO подойдут другие? /Users/pavel/GitHub-repos/own-golang-manual/3-otus-golang-course/17/channel-vs-mutex-vs-atomic

	for port := 1; port <= maxPortNumber; port++ {
		wg.Add(1)
		go func(j int) {
			defer wg.Done()
			// address := fmt.Sprintf("scanme.nmap.org:%d", j) TODO проверить сколько будет выделться памяти так
			conn, err := dialer.Dial("tcp", host+":"+strconv.Itoa(j))
			if err != nil {
				return
			}
			err = conn.Close()
			if err != nil {
				fmt.Println("Unexpected conn. closing error:", err.Error())
			}

			openPorts = append(openPorts, j)
		}(port)

	}
	wg.Wait()

	return openPorts, nil
}

// TODO профильнуть, где узкое место? что на кучу уехало?
