package main

import (
	"fmt"
	"net"
	"strconv"
	"sync"
	"time"
)

// 3 port state:
// available
// closed
// filtered

// Результат по некоторым хостам полнее, чем в shodan.io; Лучше стучать по ip
// scanme.nmap.org [22 80]
// 54.37.232.108 [21 25 22 143 111 53 443 465 2083 110 995 2080 2082 2079 2096 3306 80 993 2087 2078 2077 2095]

const MaxPort = 65535
const Host = "127.0.0.1"//"37.18.152.2"

// Ports availability testing
func main() {
	// TCP ports range from 1 to 65535
	dialer := net.Dialer{
		Timeout: 10 * time.Second,
	}

	// хранилище открытых портов
	openPorts := make([]int, 0)
	// TODO не бокируется ли тут слайс? может переделать на что-то?

	var wg sync.WaitGroup
	// /Users/pavel/GitHub-repos/own-golang-manual/3-otus-golang-course/17/channel-vs-mutex-vs-atomic
	// TODO подойдут другие?

	for port := 1; port <= MaxPort; port++ {
		wg.Add(1)
		go func(j int) {
			defer wg.Done()
			// address := fmt.Sprintf("scanme.nmap.org:%d", j) TODO проверить сколько будет выделться памяти так
			conn, err := dialer.Dial("tcp", Host+":"+strconv.Itoa(j))
			if err != nil {
				return
			}
			err = conn.Close()
			if err != nil {
				fmt.Println("Unexpected conn. closing error:", err.Error())
			}

			openPorts = append(openPorts, j)
		}(port)

	}
	wg.Wait()

	fmt.Println("Opened ports:", openPorts)
}
// TODO профильнуть, где узкое место? что на кучу уехало?


