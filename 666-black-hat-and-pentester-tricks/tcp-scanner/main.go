package main

import (
	"fmt"
	"net"
	"strconv"
	"sync"
	"time"
)

// 3 port state:
// available
// closed
// filtered

// Задача - в цикле проверить все порты и записать откртые

// вопросы
// нужен ли тут var wg sync.WaitGroup



// Ports availability testing
func main() {
	// TCP ports range from 1 to 65535
	dialer := net.Dialer{
		Timeout: 10 * time.Second,
	}

	const MaxPort = 65535

	// хранилище открытых портов
	openPorts := make([]int, 0, MaxPort)

	var wg sync.WaitGroup

	for port := 1; port <= MaxPort; port++ {

		wg.Add(1)
		go func(j int) {
			// отделн фун
			_, err := dialer.Dial("tcp", "54.37.232.108:"+strconv.Itoa(j))
			if err == nil {
				openPorts = append(openPorts, j)
			}
			//conn.Close()
			wg.Done()
		}(port)

	}
	wg.Wait()


	fmt.Println("Opended ports:", openPorts)
}
